# Included libraryes of interest
CIL_DIR=-I /home/rshea/mote/cil-1.3.5/obj/x86_LINUX
OUNIT_DIR=-I /usr/lib/ocaml/3.08.3/oUnit
MEMCHECK_DIR=-I ../memCheck

########################################

# Compilers / generators
OCAMLC=ocamlc
OCAMLOPT=ocamlopt
OCAMLDEP=ocamldep

# all relevant -I options here
INCLUDES=$(CIL_DIR) $(OUNIT_DIR) $(MEMCHECK_DIR)

# all relevant -L options here
#LIB_DIRS=-ccopt -L/home/rshea/mote/cil-1.3.5/obj/x86_LINUX

# LIBS
LIBS=unix.cma str.cma cil.cma oUnit.cma
OPTLIBS=$(LIBS:.cma=.cmx)

# add other options for ocamlc here
OCAMLFLAGS=-g $(LIB_DIRS) $(INCLUDES)    

# add other options for ocamlopt here
OCAMLOPTFLAGS=$(LIB_DIRS) $(INCLUDES) 

# The list of object files for the memory checker
MEMORY_OBJS=
OPT_MEMORY_OBJS=$(MEMORY_OBJS:.cmo=.cmx)





########################################
# Target specific rules.  Thes can take the form of:
#
#memory: $(OPT_MEMORY_OBJS) xxx.cmx
#	$(OCAMLOPT) -o xxx $(OCAMLOPTFLAGS) $(OPTLIBS) $(OPT_MEMORY_OBJS) xxx.cmx
#
#xxxByte: $(MEMORY_OBJS) xxx.cmo
#	$(OCAMLC) -o xxxByte $(OCAMLFLAGS) $(LIBS) $(MEMORY_OBJS) xxx.cmo
#
########################################
UMA_MLI = ../memCheck/memUtil.cmi ../memCheck/isEquivalent.cmi 
UMA_OBJS = ../memCheck/makeOneCFG.cmo\
		   ../memCheck/memUtil.cmo\
		   ../memCheck/isEquivalent.cmo\
		   cilDriver.cmo\
		   unitIsEquivalent.cmo
unitIsEquivalent: $(UMA_MLI) $(UMA_OBJS)
	$(OCAMLC) -o unitIsEquivalent $(OCAMLFLAGS) $(LIBS) $(UMA_OBJS)











########################################
# General rules.  These probably do not need to change.
########################################

# Common rules
.SUFFIXES: .ml .mli .cmo .cmi .cmx

.ml.cmo:
	$(OCAMLC) $(OCAMLFLAGS) -c $<

.mli.cmi:
	$(OCAMLC) $(OCAMLFLAGS) -c $<

.ml.cmx:
	$(OCAMLOPT) $(OCAMLOPTFLAGS) -c $<

# Clean up
clean:
	rm -f *.o
	rm -f *.cm[iox]


