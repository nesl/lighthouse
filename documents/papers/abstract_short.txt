Many sensor network systems expose general interfaces for dynamically creating
and manipulating resources of various kinds.  While these interfaces allow
programmers to accomplish common system tasks simply and efficiently, they
admit the potential for programmers to mismanage resources, for example
through leaked resources or improper resource sharing.  We describe a static
analysis algorithm and tool that brings the safety of static resource
management to systems that dynamically manage resources.  Our analysis is
based on the observation that programmers often use implicit ownership schemes
to manage dynamic resources.  In such a scheme, each resource has a unique
owner, who has both the capabilities to manipulate the resource and the
responsibilities to use and dispose of the resource properly.  Our tool
ensures at compile time that this ownership discipline is obeyed for each
dynamically allocated resource.  We apply our tool to ensure proper management
of dynamically allocated memory in programs written on top of SOS, a sensor
network operating system.  We have evaluated the tool on over 20 modules in
historical versions of user applications and drivers in SOS, containing more
than 200 memory operations.  Our tool has identified errors in these modules,
with a reasonable false positive rate demonstrating its utility.
